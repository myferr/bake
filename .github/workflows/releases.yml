name: Build and Release

on:
  push:
    tags:
      - "github-releases-v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    outputs:
      artifact_name: ${{ steps.prepare.outputs.name }}
      artifact_path: ${{ steps.prepare.outputs.path }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release binary
        run: cargo build --release

      # Prepare artifact name and path for Linux/macOS
      - name: Prepare artifact name and path (Linux/macOS)
        if: runner.os != 'Windows'
        id: artifact_unix
        shell: bash
        run: |
          BIN_NAME="bake-tool"
          EXT=""
          ARTIFACT_NAME="${BIN_NAME}-${{ runner.os }}${EXT}"
          ARTIFACT_PATH="target/release/${BIN_NAME}${EXT}"
          echo "name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
          echo "path=$ARTIFACT_PATH" >> $GITHUB_OUTPUT

      # Prepare artifact name and path for Windows
      - name: Prepare artifact name and path (Windows)
        if: runner.os == 'Windows'
        id: artifact_windows
        shell: pwsh
        run: |
          $BIN_NAME = "bake-tool"
          $EXT = ".exe"
          $ARTIFACT_NAME = "$BIN_NAME-$($env:RUNNER_OS)$EXT"
          $ARTIFACT_PATH = "target/release/$BIN_NAME$EXT"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "name=$ARTIFACT_NAME"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "path=$ARTIFACT_PATH"

      - name: Upload artifact (Linux/macOS)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact_unix.outputs.name }}
          path: ${{ steps.artifact_unix.outputs.path }}

      - name: Upload artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact_windows.outputs.name }}
          path: ${{ steps.artifact_windows.outputs.path }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: bake-tool-ubuntu-latest
          path: ./artifacts/ubuntu

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: bake-tool-macos-latest
          path: ./artifacts/macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: bake-tool-windows-latest.exe
          path: ./artifacts/windows

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/ubuntu/bake-tool-ubuntu-latest
            ./artifacts/macos/bake-tool-macos-latest
            ./artifacts/windows/bake-tool-windows-latest.exe
